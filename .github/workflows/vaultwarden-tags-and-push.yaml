run-name: Build and push vaultwarden-api image
name: Build and push vaultwarden-api image

on:
  workflow_dispatch:
    inputs:
      dinumTag:
        description: 'DINUM docker image tag'
        required: true
        default: "0.0"
      commitSha:
        description: 'Git commit sha to build the image'
        required: true
        default: "6b3f8876840988595807191a058ac7b0c431d066"
      repository:
        description: "Git repository to clone"
        required: true
        default: "numerique-gouv/dockerfiles"


env:
  DOCKER_USER: 1001:127

jobs:
  build-and-push-backend:
    runs-on: ubuntu-latest
    steps:
      -
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          repositories: "dockerfiles,secrets"
      -
        name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
          token: ${{ steps.app-token.outputs.token }}
      -
        name: Load sops secrets
        uses: rouja/actions-sops@main
        with:
          secret-file: secrets/numerique-gouv/dockerfiles/secrets.enc.env
          age-key: ${{ secrets.SOPS_PRIVATE }}
      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request'
        run: echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USER" --password-stdin
      -
        name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
          token: ${{ steps.app-token.outputs.token }}
          ref: ${{ github.event.inputs.commitSha }}
          repository: ${{ github.event.inputs.repository }}
          path: dockerfiles
      -
        name: Build and push
        run: |
          cd dockerfiles/dockerfiles/vaulwarden-api;
          docker build --annotation "commitSha=${{ github.event.inputs.commitSha }}" \
          --push . -t lasuite/vaultwarden-api:${{ github.event.inputs.dinumTag }};
